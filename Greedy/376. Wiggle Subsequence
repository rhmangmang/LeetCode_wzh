class Solution {
    public int wiggleMaxLength(int[] nums) {
        if (nums.length <= 1) return nums.length;
        
        int[] dp = new int[nums.length];
        
        int start=1;
        while (start < nums.length) {
            if (nums[start] == nums[start-1]) ++start;
            else break;
        }
        if (start == nums.length) return 1;
        
        int rel=0;
        for (int i=start; i<nums.length; ++i) {
            int max = 0;
            for (int j=i-1; j>=start-1; --j) {
                if ((j == start-1) && (max == 0)) {
                    if (nums[i] > nums[j]) max = 2;
                    else max = -2;
                }
                else if (dp[j]<0 && nums[i]>nums[j]) {
                    if ((dp[j]*(-1)+1) > Math.abs(max)) max = dp[j]*(-1)+1;
                } else if (dp[j]>0 && nums[i]<nums[j]) {
                    if ((dp[j]+1) >  Math.abs(max)) max = (-1)*(dp[j]+1);
                }
            }
            dp[i] = max;
            if (Math.abs(max) > rel) rel = Math.abs(max);
        }
        return rel;
    }
}
