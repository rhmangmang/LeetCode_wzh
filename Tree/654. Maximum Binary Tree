/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public static TreeNode constructMaximumBinaryTree(int[] nums) {
        return recurVersion(nums, 0, nums.length-1);
    }
    public static TreeNode recurVersion (int[] nums, int start, int end) {
        if (start > end || start < 0 || end >= nums.length) return null;
        
        int maxVal = nums[start];
        int maxValIndx = start;

        for (int i=start; i<=end; ++i) {
            if (nums[i] > maxVal) {
                maxVal = nums[i];
                maxValIndx = i;
            }
        }
        TreeNode root = new TreeNode(maxVal);
        
        root.left = recurVersion(nums, start, maxValIndx-1);
        root.right = recurVersion(nums, maxValIndx+1, end);
        
        return root;
    }
}
